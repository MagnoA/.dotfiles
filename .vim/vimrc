"----------------------------------Plugins-------------------------------------------"


call plug#begin('~/.vim/plugged')

Plug 'chriskempson/base16-vim'
Plug 'scrooloose/syntastic'
Plug 'valloric/youcompleteme', {'do': './install.py --clang-completer'}
Plug 'hail2u/vim-css3-syntax'
Plug 'editorconfig/editorconfig-vim'
Plug 'kien/ctrlp.vim'
Plug 'scrooloose/nerdtree'
Plug 'vim-airline/vim-airline'

call plug#end()


"--------------------------------Shortcuts-------------------------------------------"

"Open or close NERDTree
map <C-n> :NERDTreeToggle<CR>
"Open ctrlp
map <F3> :CtrlP<CR>
"Compile and Run Cmake project
autocmd FileType cpp map <F9> :! cd build && make && cd .. && mv build/a.out . && ./a.out<CR>
"Rebuild and Compile Cmake project
autocmd FileType cpp map <F10> :! rm -rf build && mkdir build && cd build && cmake .. && make && cd .. && mv build/a.out .<CR>

"-----------------------------------------------------------------------------------"

filetype on 
syntax on                           "Syntax highlighting based on file names

colorscheme base16-monokai
let base16colorspace=256            "Access colors present in 256 colorspace
set background=dark

set guifont=Monaco\ 12              "Setting the font

set number
set lines=63 columns=90
set colorcolumn=90


"--------------------------------Syntastic Configs-----------------------------------"


set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1     "Stick any detected errors to the list
let g:syntastic_auto_loc_list = 1                "Auto open and close error window
let g:syntastic_check_on_open = 1                "Syntax check on open
let g:syntastic_check_on_wq = 0                  "Syntax check on save
let g:syntastic_loc_list_height = 5              "Error window height in lines
let g:syntastic_stl_format = "[%E{Error: line %fe | Total: #%e}%B{, }%W{Warning: line %fw | Total: #%w}]"   "Error message above error window

let g:syntastic_python_checkers = ["flake8"]                "Checker for Python
let g:syntastic_quiet_messages = {'regex': 'E265'}          "Disable comment error

let g:syntastic_cpp_checkers = ["gcc"]                      "Checker for C++

let g:syntastic_c_checkers = ["gcc"]                        "Checker for C

let g:syntastic_html_checkers = ["tidy"]                    "Checker for HTML


"--------------------------------YouCompleteMe Configs-------------------------------"


let g:ycm_show_diagnostics_ui = 0                 "Stop blocking checkers for syntastic
let g:ycm_autoclose_preview_window_after_insertion = 1 "Info block disappear after insertion
let g:ycm_python_binary_path = '/usr/bin/python2'
let g:ycm_global_ycm_extra_conf = "~/.vim/.ycm_extra_conf.py"


"--------------------------------NerdTree Configs-------------------------------------"

autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif  "Open NERDTree automatically if vim starts up with no file specified
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | endif "Open NERDTree automatically if vim opens a directory
